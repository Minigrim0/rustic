{
    struct_token: Struct,
    fields: Fields::Named {
        brace_token: Brace,
        named: [
            Field {
                attrs: [
                    Attribute {
                        pound_token: Pound,
                        style: AttrStyle::Outer,
                        bracket_token: Bracket,
                        meta: Meta::Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident {
                                        ident: "filter_source",
                                        span: #0 bytes(25122..25135)
                                    },
                                    arguments: PathArguments::None
                                }
                            ]
                        }
                    }
                ],
                vis: Visibility::Inherited,
                mutability: FieldMutability::None,
                ident: Some(Ident {
                    ident: "sources",
                    span: #0 bytes(25142..25149)
                }),
                colon_token: Some(Colon),
                ty: Type::Array {
                    bracket_token: Bracket,
                    elem: Type::Path {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident {
                                        ident: "f32",
                                        span: #0 bytes(25152..25155)
                                    },
                                    arguments: PathArguments::None
                                }
                            ]
                        }
                    },
                    semi_token: Semi,
                    len: Expr::Lit {
                        attrs: [],
                        lit: Lit::Int {
                            token: 1
                        }
                    }
                }
            },
            Comma,
            Field {
                attrs: [],
                vis: Visibility::Inherited,
                mutability: FieldMutability::None,
                ident: Some(Ident {
                    ident: "cutoff_frequency",
                    span: #0 bytes(25165..25181)
                }),
                colon_token: Some(Colon),
                ty: Type::Path {
                    qself: None,
                    path: Path {
                        leading_colon: None,
                        segments: [
                            PathSegment {
                                ident: Ident {
                                    ident: "f32",
                                    span: #0 bytes(25183..25186)
                                },
                                arguments: PathArguments::None
                            }
                        ]
                    }
                }
            },
            Comma,
            Field {
                attrs: [],
                vis: Visibility::Inherited,
                mutability: FieldMutability::None,
                ident: Some(Ident {
                    ident: "previous_output",
                    span: #0 bytes(25192..25207)
                }),
                colon_token: Some(Colon),
                ty: Type::Path {
                    qself: None,
                    path: Path {
                        leading_colon: None,
                        segments: [
                            PathSegment {
                                ident: Ident {
                                    ident: "f32",
                                    span: #0 bytes(25209..25212)
                                },
                                arguments: PathArguments::None
                            }
                        ]
                    }
                }
            },
            Comma,
            Field {
                attrs: [],
                vis: Visibility::Inherited,
                mutability: FieldMutability::None,
                ident: Some(Ident {
                    ident: "index",
                    span: #0 bytes(25218..25223)
                }),
                colon_token: Some(Colon),
                ty: Type::Path {
                    qself: None,
                    path: Path {
                        leading_colon: None,
                        segments: [
                            PathSegment {
                                ident: Ident {
                                    ident: "usize",
                                    span: #0 bytes(25225..25230)
                                },
                                arguments: PathArguments::None
                            }
                        ]
                    }
                }
            },
            Comma
        ]
    },
    semi_token: None
}